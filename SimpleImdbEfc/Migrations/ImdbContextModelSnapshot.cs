// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleImdbEfc;

#nullable disable

namespace SimpleImdbEfc.Migrations
{
    [DbContext(typeof(ImdbContext))]
    partial class ImdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("PersonShow", b =>
                {
                    b.Property<int>("StarsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StarsInId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StarsId", "StarsInId");

                    b.HasIndex("StarsInId");

                    b.ToTable("Stars", (string)null);
                });

            modelBuilder.Entity("PersonShow1", b =>
                {
                    b.Property<int>("WritersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WritesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("WritersId", "WritesId");

                    b.HasIndex("WritesId");

                    b.ToTable("Writers", (string)null);
                });

            modelBuilder.Entity("SimpleImdbEfc.Genre", b =>
                {
                    b.Property<int>("ShowId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ShowId", "Name");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("SimpleImdbEfc.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Birth")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("SimpleImdbEfc.Review", b =>
                {
                    b.Property<int>("ShowId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<int>("Votes")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShowId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("SimpleImdbEfc.Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Episodes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("PersonShow", b =>
                {
                    b.HasOne("SimpleImdbEfc.Person", null)
                        .WithMany()
                        .HasForeignKey("StarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleImdbEfc.Show", null)
                        .WithMany()
                        .HasForeignKey("StarsInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonShow1", b =>
                {
                    b.HasOne("SimpleImdbEfc.Person", null)
                        .WithMany()
                        .HasForeignKey("WritersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleImdbEfc.Show", null)
                        .WithMany()
                        .HasForeignKey("WritesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SimpleImdbEfc.Genre", b =>
                {
                    b.HasOne("SimpleImdbEfc.Show", "Show")
                        .WithMany("Genres")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Show");
                });

            modelBuilder.Entity("SimpleImdbEfc.Review", b =>
                {
                    b.HasOne("SimpleImdbEfc.Show", "Show")
                        .WithOne("Review")
                        .HasForeignKey("SimpleImdbEfc.Review", "ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Show");
                });

            modelBuilder.Entity("SimpleImdbEfc.Show", b =>
                {
                    b.Navigation("Genres");

                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
